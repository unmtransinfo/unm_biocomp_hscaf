
= Introduction =

This package can be used via two Java applications or its API.  To get started it may be helpful to try the applications and learn how the algorithm works by example.


= Using the Applications =

The two applications are:
  * *hier_scaffolds* - HierS scaffolds analyzer
  * *hier_scaffolds_common* - search for common HierS scaffolds

hier_scaffolds application command line help
{{{
 hier_scaffolds - HierS scaffolds analyzer

 From the University of New Mexico Division of Biocomputing
 (http://biocomp.health.unm.edu/).
 
 usage: hier_scaffolds [options]
  required:
    -i IFILE
    -o OFILE ... one (possibly) disconnected mol of parts per input mol
  options:
    -out_scaf <outscafs> ... unique scafs numbered sequentially
    -inc_mol      ... include mols in output (-o)
    -inc_scaf ... include scaffolds in output (-o)
    -inc_link   ... include linkers in output (-o)
    -inc_chain ... include sidechains in output (-o)
    -scaflist_title  ... scaf/link/chain list written to title
    -scaflist_append2title  ... scaf/link/chain list appended to title
    -scaflist_sdtag <sdtag> ... scaf list written to SD dataitem
    -maxmol <max>   ... max size/atoms of input mol [default=100]
    -show_js         ... show junction points (as pseudoatoms) -- for debugging, visualizing
    -keep_nitro_attachments ... atoms single bonded to ring N remain in scaffold
    -stereo ................... stereo scaffolds (default non-stereo)
    -v ... verbose
    -vv ... very verbose
    -h ... this help
}}}

hier_scaffolds_common application command line help
{{{
 hier_scaffolds_common - search for common HierS scaffolds
 
 From the University of New Mexico Division of Biocomputing
 (http://biocomp.health.unm.edu/).
 
 usage: hier_scaffolds_common [options]
  required:
    -q IFILE ... query molecule
    -db IFILE ... db molecule[s]
    -o OFILE ... common scaffold[s] ordered by size
  options:
    -out_scaf  ... unique scafs numbered sequentially
    -maxmol    ... max size/atoms of input mol [default=100]
    -show_js         ... show junction points (as pseudoatoms) -- for
debugging, visualizing
    -keep_nitro_attachments ... atoms single bonded to ring N remain in
scaffold
    -stereo ... stereo scaffolds (default is non-stereo)
    -v ... verbose
    -vv ... very verbose
    -h ... this help
}}}

== Example commands ==

To run the applications, download unm_biocomp_hscaf.jar and assure that JChem (v5.5+) is installed.  The jar looks for jchem.jar in either /usr/local/ChemAxon/JChem/lib/ or /home/app/ChemAxon/JChem/lib/ but it can be installed elsewhere if specified explicitly.  The jar's default main class is edu.unm.health.biocomp.hier_scaffolds.

Analyze input file molecules for scaffolds:
{{{
java -jar unm_biocomp_hscaf.jar -i test.smi -out_scaf test_hscaf_scaf.smi -v
}}}


Compare query molecule with database for common scaffolds:
{{{
export CLASSPATH=/usr/local/ChemAxon/JChem/lib/jchem.jar
java -classpath $CLASSPATH:unm_biocomp_hscaf.jar edu.unm.health.biocomp.hscaf.hier_scaffolds_common
 -q test_query.smi -db test_db.smi -o test_hscafcommon_out.smi -out_scaf test_hscafcommon_scaf.smi -v
}}}